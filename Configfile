# I'm super paranoid about C++ code... :)
LANGUAGES   += c++
COMPILEOPTS += -Wall
COMPILEOPTS += -Wextra
COMPILEOPTS += -Werror
COMPILEOPTS += -pedantic
COMPILEOPTS += -std=c++0x

# The test scripts use BASH
LANGUAGES   += bash

LANGUAGES   += h

LANGUAGES   += pkgconfig
LINKOPTS    += -Sobj/proc/version-pc.sed

# Allow everything here to use my local libraries
LANGUAGES   += c++
COMPILEOPTS += -Isrc

# Generates a C version number and verifies that it matches git
GENERATE    += version.h
GENERATE    += version-pc.sed

# A potentially useful library that allows for some manipulation of
# VCD files
HEADERS     += libvcd/datum.h++
SOURCES     += libvcd/datum.h++
HEADERS     += libvcd/longname.h++
SOURCES     += libvcd/longname.h++
HEADERS     += libvcd/vcd.h++
SOURCES     += libvcd/vcd.h++

LIBRARIES   += libvcd.so
SOURCES     += libvcd/vcd.c++

LIBRARIES   += pkgconfig/libvcd.pc
SOURCES     += libvcd/libvcd.pc

# Performs a logical diff on two VCD files, determining if they
# contain the same set of changes (but not necessiarally in exactly
# the same order.
BINARIES    += vcddiff
SOURCES     += vcddiff.c++

TESTSRC     += counter-0sig0diff.bash
TESTSRC     += counter-0sig1diff.bash
TESTSRC     += counter-0sig2diff.bash
TESTSRC     += counter-1sig0diff.bash
TESTSRC     += counter-1sig1diff.bash

TESTSRC     += syntax-multi_line_end.bash
TESTSRC     += syntax-reg_or_wire.bash
TESTSRC     += syntax-date.bash
TESTSRC     += syntax-version.bash
TESTSRC     += syntax-blank_line.bash
TESTSRC     += syntax-dumpvars.bash
TESTSRC     += syntax-one_bit.bash
TESTSRC     += syntax-multi_map.bash
TESTSRC     += syntax-multi_set.bash
TESTSRC     += syntax-skip_cycle.bash
TESTSRC     += syntax-skip_many_cycles.bash
TESTSRC     += syntax-bitwise.bash

# Lists the signals present in a VCD file
BINARIES    += vcdsigs
SOURCES     += vcdsigs.c++
